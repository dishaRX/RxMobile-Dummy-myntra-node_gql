"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const swagger_ui_express_1 = __importDefault(require("swagger-ui-express"));
const js_yaml_1 = __importDefault(require("js-yaml"));
const cors_1 = __importDefault(require("cors"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const body_parser_1 = __importDefault(require("body-parser"));
const OpenApiValidator = __importStar(require("express-openapi-validator"));
const logger_1 = __importDefault(require("./logger"));
const config_1 = __importDefault(require("./config"));
const express_1 = __importDefault(require("express"));
const express_bearer_token_1 = __importDefault(require("express-bearer-token"));
class ExpressServer {
    constructor(port, openApiYaml) {
        this.port = port;
        this.openApiPath = openApiYaml;
        this.app = (0, express_1.default)();
        try {
            this.schema = js_yaml_1.default.load(fs_1.default.readFileSync(openApiYaml, 'utf8'));
        }
        catch (e) {
            logger_1.default.error('failed to start Express Server', e);
        }
        this.setupMiddleware();
    }
    setupMiddleware() {
        this.app.use((0, cors_1.default)());
        this.app.use(body_parser_1.default.json({ limit: '14MB' }));
        this.app.use(express_1.default.json());
        this.app.use(express_1.default.urlencoded({ extended: false }));
        this.app.use((0, cookie_parser_1.default)());
        this.app.use((req, res, next) => {
            (0, express_bearer_token_1.default)()(req, res, next);
            req.headers.authorization = req.token;
        });
        this.app.use((req, res, next) => {
            const start = Date.now();
            try {
                console.log(`--> ${req.method} ${req.path}`);
                next();
            }
            catch (e) {
                console.log(e);
            }
            finally {
                const delta = Date.now() - start;
                console.log(`<-- ${req.method} ${req.path} ${res.statusCode} ${delta}ms`);
            }
        });
        this.launch();
        //this.app.get('/hello', (req, res) => res.send(`Hello World. path: ${this.openApiPath}`));
        //Send the openapi document *AS GENERATED BY THE GENERATOR*
        this.app.get('/openapi', (req, res) => res.sendFile(path_1.default.join(__dirname, 'api', 'openapi.yaml')));
        //View the openapi document in a visual interface. Should be able to test from this page
        this.app.use('/api-docs', swagger_ui_express_1.default.serve, swagger_ui_express_1.default.setup(this.schema));
    }
    launch() {
        console.log("LAUNCHED in EXPRESS SERVER");
        OpenApiValidator.middleware({
            apiSpec: this.openApiPath,
            validateRequests: true,
            validateResponses: true,
            operationHandlers: path_1.default.join(__dirname),
            fileUploader: { dest: config_1.default.FILE_UPLOAD_PATH },
        });
        this.app.use((err, req, res, next) => {
            // format error
            res.status(err.status || 500).json({
                message: err.message,
                errors: err.errors,
            });
        });
    }
    close() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.server !== undefined) {
                yield this.server.close();
                console.log(`Server on port ${this.port} shut down`);
            }
        });
    }
}
module.exports = ExpressServer;
